- name: Gather Contrail logs
  hosts: contrail
  become: yes
  tasks:
    - set_fact:
        devstack_base_dir: /opt/stack
      when: devstack_base_dir is not defined

    - name: List running containers
      command: 'docker ps -a --format "{% raw %}{{.Names}}{% endraw %}"'
      register: container_list

    - name: Create container logdir
      file:
        path: "{{ devstack_base_dir }}/logs/contrail"
        state: directory

    - name: Dump container logs (log)
      shell: "docker logs {{ item }} &> {{ devstack_base_dir }}/logs/contrail/{{ item }}.log"
      with_items: "{{ container_list.stdout_lines }}"

    - name: list files
      shell:
        chdir: '{{ devstack_base_dir }}/logs/'
        executable: /bin/bash
        cmd: |
          find .

    - name: Fetch container logs
      synchronize:
        src: '{{ devstack_base_dir }}/logs/'
        dest: "{{ zuul.executor.log_root }}/{{ inventory_hostname }}"
        mode: pull
        recursive: yes

    - name: Fetch /var/log/contrail logs
      synchronize:
        src: '/var/log/contrail'
        dest: "{{ zuul.executor.log_root }}/var-log-contrail"
        mode: pull
        recursive: yes

- name: Gather contrail-ansible-deployer logs
  hosts: controller
  become: yes
  tasks:
    - name: Fetch contrail-ansible-deployer instances file
      synchronize:
        src: "{{ ansible_env.HOME }}/contrail-ansible-deployer/{{ item }}"
        dest: "{{ zuul.executor.log_root }}/contrail-ansible-deployer/{{ item }}"
        mode: pull
        recursive: yes
      with_items:
        - "config/instances.yaml"
        - "inventory/hosts"
        - "ansible.cfg"
      ignore_errors: yes
    - name: Fetch contrail-ansible-deployer instances file
      shell:
        executable: /bin/bash
        cmd: |
          cp "{{ ansible_env.HOME }}/contrail-ansible-deployer/{{ item }}" "{{ devstack_base_dir }}/logs/"
      with_items:
        - "config/instances.yaml"
        - "inventory/hosts"
        - "ansible.cfg"
