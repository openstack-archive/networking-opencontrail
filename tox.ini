[tox]
minversion = 2.0
envlist = py34,py27,pypy,pep8,docs,linters
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
setenv =
	VIRTUAL_ENV={envdir}
	PYTHONUNBUFFERED=1
	ROLE_NAME=galera_client
	TEST_IDEMPOTENCE=false
	WORKING_DIR={toxinidir}
	PYTHONWARNINGS=default::DeprecationWarning
deps = -r{toxinidir}/test-requirements.txt
       -r{toxinidir}/requirements.txt
       -egit+https://git.openstack.org/openstack/neutron.git#egg=neutron
commands = python setup.py test --slowest --testr-args='{posargs}'
passenv =
    HOME
    USER
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY
whitelist_externals =
    bash

[testenv:integration]
whitelist_externals =
    {[testenv]whitelist_externals}
    openstack
passenv =
    {[testenv]passenv}
    CONTROLLER_IP
setenv =
    {[testenv]setenv}
    OS_STDOUT_CAPTURE=1
    OS_STDERR_CAPTURE=1
    OS_LOG_CAPTURE=1
commands =
    python -m testtools.run discover -t {toxinidir} {toxinidir}/networking_opencontrail/tests/integration

[testenv:pep8]
commands = flake8 {posargs}

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands = python setup.py test --coverage --coverage-package-name=networking_opencontrail --testr-args='{posargs}'

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:releasenotes]
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:ansible]
deps =
    {[testenv]deps}
    -rhttps://git.openstack.org/cgit/openstack/openstack-ansible/plain/global-requirement-pins.txt
    -rhttps://git.openstack.org/cgit/openstack/openstack-ansible-tests/plain/test-ansible-deps.txt

[testenv:ansible-syntax]
deps =
    {[testenv:ansible]deps}
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-syntax.sh"

[testenv:ansible-lint]
deps =
    {[testenv:ansible]deps}
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-lint.sh"

[testenv:linters]
deps =
    {[testenv:ansible]deps}
commands =
    {[testenv:pep8]commands}
    {[testenv:ansible-lint]commands}
    {[testenv:ansible-syntax]commands}

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
# N340 Check usage of <module>.i18n (and neutron.i18n)
# N341 Check usage of _ from python builtins
# N343 Production code must not import from neutron.tests.*
# N521 Validate that jsonutils module is used instead of json
# N530 No importing of neutron; should be ignored in neutron itself
# N534 Exception messages should be translated
show-source = True
ignore = E123,E125,N340,N341,N343,N521,N530,N534
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[hacking]
local-check-factory = neutron.hacking.checks.factory
